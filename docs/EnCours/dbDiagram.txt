/*DATABASE, 26/2/2024*/

enum UniteMesure {
  /*FIXE*/
  "gramme"
  "Millilitre"
  "portion"
}

enum ActionMapaq {
  "Planche-Bleu"
  "Planche-Rouge"
  "refroidir rapidement"
}

enum Alergene {
  "lactose"
  "gluten"
  "arachides"
  "noix"
  "œufs"
  "poissons"
  "crustacés"
  "mollusques"
  "soja"
  "sulfites"
  "moutarde"
}

enum typeUser {
  /*FIXE*/
  "Admin"
  "Membre"
}

Enum RecetteEtat{
  /*FIXE*/
  "Recette"
  "Plat"
}

Table User {
  id int [pk]
  prenom varchar
  nom varchar
  type typeUser
  tel varchar
  adresse varchar
  password varchar
  courriel varchar unique
  username varchar unique
  avatar int [ref: > Avatar.key]
}

Table Cuisine {
  id int [pk]
  user_admin int [ref: > User.id]
  nom varchar
  int costObjectif [default: 20]
}

Table CuisineRole {
  cuisine int [ref: > Cuisine.id, pk]
  role varchar [pk]
}

Table UserCuisine {
  cuisine int [ref: > Cuisine.id]
  user int [ref: > User.id]
  role varchar
}

Table Fournisseur{
  id int [pk]
  nom string
}

/*
Table Representant {
  id int
  nom string
  tel varchar
}
*/

Table FournisseurCuisine {
  /*A travers le nom on sait si c'est le marché */
  id int [pk]
  cuisine int [ref: > Cuisine.id, unique]
  nom varchar [unique]
  // representant int [ref:> Representant.id]
  /*unique cuisine et nom*/
}

Table FournisseurIngredient {
  fournisseur int [ref: > FournisseurCuisine.id]
  ingredient int [ref: > Ingredient.id]
}

Table Ingredient {
  id int [pk]
  nom varchar
  prix_unitaire int /*499 prix = 4.99$*/
  unite_mesure UniteMesure
}


Table LivreRecette {
  /*
  Comme créer une categorie
  Lié a un chef, menu = partagé*/
  id int [pk]
  nom varchar
  chef int [ref: > User.id]
}

Table RecipeArchive {
  /*A VOIR*/
  id int [pk]
}

Table categorieRecette {
  user int [ref: > User.id, pk]
  categorie varchar [pk]
  /*user et categorie unique ensemble SET*/
}

Table Recipe { /*Recette*/
  /*Garder dans le temps des versions ?
  Gérer les couts objectif: 25% 18%*/
  id int [pk]
  version_number int [default: 0]
  nom varchar
  /*categorie, enum ?*/
  livreRecetteId int [ref: > LivreRecette.id]
  categorie int [ref: > categorieRecette.categorie]
  recetteEtat RecetteEtat
  tempsPreparation int
  tempsCuisson int
  
  etapes string /*toutes les etapes JSON*/

  unite_mesure UniteMesure
  rendement int /*3000ml 3 portions*/
  dateAjout date [default: 0] /*NOW()*/
  obj_rendement float /* cost * entre 0 et 1*/
}

Table RecetteAlergene {
  recette int [ref: > Recipe.id]
  alergene Alergene
}

Table RecettePhoto {
  recette int [ref: > Recipe.id]
  photo int [ref: > Photo.key]
}

Table RecetteIngredient {
  recette int [ref: > Recipe.id]
  ingredient int [ref: > Ingredient.id]
}

Table Menu {
  id int [pk]
  nom varchar [unique]
  cuisine int [ref: > Cuisine.id]
  estPublic bool [default: false]
}

Table MenuPlat {
  /*date now pour savoir l ordre ?*/
  menu int [ref: > Menu.id]
  recette int [ref: > Recipe.id]
  categorie int [ref: > PlatEmplacement.categorie]
}

Table PlatEmplacement {
  /*exemple: entrée principale dessert*/
  user int [ref: > User.id, pk]
  categorie varchar [unique]
}

Table Bottin {
 /*Lorsque 1 forunisseur créé on call en db*/ 
  id int [pk]
  cuisine int [ref: > Cuisine.id]
  nom varchar
  description varchar
  tellephone varchar
  /*portion admin*/
  numero_compte varchar
  est_public bool [default: false]
}

Table CheckTemp {
  id int [pk]
  cuisine int [ref: > Cuisine.id]
  user int [ref: > User.id]
  date date [default: 1] // NOW()
  temperature float
}



Table Avatar {
  /*S3*/
  key int [pk]
  value varchar
}

/* S3 */
Table Photo {
  key int [pk]
  value varchar
}

Table Video {
  key int [pk]
  value varchar
}