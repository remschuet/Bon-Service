/*DATABASE, 24/2/2024*/

enum UniteMesure {
  "Kilogramme"
  "Millilitre"
}

enum Role {
  /*modifier par un chef ?*/
  "Chef"
  "Sous-Chef"
  "Cuisinier"
  "Plongueur"
}

enum ActionMapaq {
  /*modifier par un chef ?*/
  "Planche-Bleu"
  "Planche-Rouge"
}

Table Chef {
  /* comment en db gerer viewer
  Comment gerer tutoriel*/
  id int [pk]
  prenom varchar
  nom varchar
  tel varchar
  adresse varchar
  password varchar
  username varchar
  avatar int [ref: > Avatar.key]
}

Table Cuisine {
  id int [pk]
  chef_id int [ref: > Cuisinier.id]
  nom varchar
  int costObjectif [default: 20]
}

Table Cuisinier {
  id int [pk]
  prenom varchar
  nom varchar
  tel varchar
  adresse varchar
  courriel varchar [unique]
  password varchar
  username varchar [unique]
  avatar int [ref: > Avatar.key]
}

Table CuisinierCuisine {
  /*chef cuisine ?*/
  cuisinier int [ref: > Cuisinier.id]
  cuisine int [ref: > Cuisine.id]
  role Role
}

Table Fournisseur {
  /*Marché de base*/
  id int [pk]
  nom varchar
  estMarche bool [default: false]
  ingredient int [ref: > Ingredient.id]
  
}

Table FournisseurIngredient {
  fournisseur int [ref: > Fournisseur.id]
  ingredient int [ref: > Ingredient.id]
}

Table Ingredient {
  id int [pk]
  nom varchar
  fournisseur int [ref: > Fournisseur.id]
  prix_unitaire float
  unite_mesure UniteMesure
}


Table LivreRecette {
  /*
  Comme créer une categorie
  Lié a un chef, menu = partagé*/
  id int [pk]
  nom varchar
  chef int [ref: > Chef.id]
}

Enum RecetteEtat{
  "Recette"
  "Menu"
}

Table Recipe {
  /*Garder dans le temps des versions ?
  Gérer les couts objectif: 25% 18%*/
  id int [pk]
  /*categorie, enum ?*/
  livreRecetteId int [ref: > LivreRecette.id]
  nom varchar
  recetteEtat RecetteEtat
  tempsPreparation int
  tempsCuisson int
  
  qtePortion int /*Aucune idée, qte, unité mesure?*/
  dateAjout date [default: 0] /*NOW()*/
}

enum Alergene {
  "lactose"
  "gluten"
}

Table RecetteAlergene {
  recette int [ref: > Recipe.id]
  alergene Alergene
}

Table RecetteEtapes {
  id int [pk]
  recette int [ref: > Recipe.id]
  ordre int /*1, 2, 3 etapes dans cette recette*/
  
  /*Liste chainé pour représenté un etapes qui suit la prochaine ?
  Select etrange pour faire ca*/
  nextEtapeId int [ref: > RecetteEtapes.id]
  etapesMapaq ActionMapaq

}

Table RecettePhoto {
  recette int [ref: > Recipe.id]
  photo int [ref: > Photo.key]
}

Table RecetteIngredient {
  recette int [ref: > Recipe.id]
  ingredient int [ref: > Ingredient.id]
}

Table Menu {
  id int [pk]
  nom varchar [unique]
  cuisine int [ref: > Cuisine.id]
  estPublic bool [default: false]
  cost int [default: 0]
  estimeVente int [default: 0] /*cost * cuisine.objectif*/
}

enum PlatEmplecement {
  "Entrée"
  "Plat"
  "Dessert"
}

Table MenuPlat {
  /*date now pour savoir l ordre ?*/
  menu int [ref: > Menu.id]
  recette int [ref: > Recipe.id]
  categorie PlatEmplecement
}






Table BottinUrgence {
  id int [pk]
  cuisine int [ref: > Cuisine.id]
  nom varchar
  description varchar
  tellephone varchar
}

Table CheckTemp {
  id int [pk]
  cuisine int [ref: > Cuisine.id]
  cuisinier int [ref: > Cuisinier.id]
  date date [default: 1] // NOW()
  temperature float
  tag bool [default: 0] // tag par nous si selon trop chaud ?
}



Table Avatar {
  /*S3*/
  key int [pk]
  value varbinary
}

/* S3 */
Table Photo {
  key int [pk]
  value varchar
}
